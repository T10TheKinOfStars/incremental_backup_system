/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef SmartSync_H
#define SmartSync_H

#include <thrift/TDispatchProcessor.h>
#include "smartSync_types.h"



class SmartSyncIf {
 public:
  virtual ~SmartSyncIf() {}
  virtual void writeFile(StatusReport& _return, const RFile& rfile) = 0;
  virtual void checkFile(RFileMetadata& _return, const RFileMetadata& meta) = 0;
};

class SmartSyncIfFactory {
 public:
  typedef SmartSyncIf Handler;

  virtual ~SmartSyncIfFactory() {}

  virtual SmartSyncIf* getHandler(const ::apache::thrift::TConnectionInfo& connInfo) = 0;
  virtual void releaseHandler(SmartSyncIf* /* handler */) = 0;
};

class SmartSyncIfSingletonFactory : virtual public SmartSyncIfFactory {
 public:
  SmartSyncIfSingletonFactory(const boost::shared_ptr<SmartSyncIf>& iface) : iface_(iface) {}
  virtual ~SmartSyncIfSingletonFactory() {}

  virtual SmartSyncIf* getHandler(const ::apache::thrift::TConnectionInfo&) {
    return iface_.get();
  }
  virtual void releaseHandler(SmartSyncIf* /* handler */) {}

 protected:
  boost::shared_ptr<SmartSyncIf> iface_;
};

class SmartSyncNull : virtual public SmartSyncIf {
 public:
  virtual ~SmartSyncNull() {}
  void writeFile(StatusReport& /* _return */, const RFile& /* rfile */) {
    return;
  }
  void checkFile(RFileMetadata& /* _return */, const RFileMetadata& /* meta */) {
    return;
  }
};

typedef struct _SmartSync_writeFile_args__isset {
  _SmartSync_writeFile_args__isset() : rfile(false) {}
  bool rfile :1;
} _SmartSync_writeFile_args__isset;

class SmartSync_writeFile_args {
 public:

  static const char* ascii_fingerprint; // = "1E5C9A9DC4A4ABC516EC4A8E390C91EE";
  static const uint8_t binary_fingerprint[16]; // = {0x1E,0x5C,0x9A,0x9D,0xC4,0xA4,0xAB,0xC5,0x16,0xEC,0x4A,0x8E,0x39,0x0C,0x91,0xEE};

  SmartSync_writeFile_args(const SmartSync_writeFile_args&);
  SmartSync_writeFile_args& operator=(const SmartSync_writeFile_args&);
  SmartSync_writeFile_args() {
  }

  virtual ~SmartSync_writeFile_args() throw();
  RFile rfile;

  _SmartSync_writeFile_args__isset __isset;

  void __set_rfile(const RFile& val);

  bool operator == (const SmartSync_writeFile_args & rhs) const
  {
    if (!(rfile == rhs.rfile))
      return false;
    return true;
  }
  bool operator != (const SmartSync_writeFile_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SmartSync_writeFile_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const SmartSync_writeFile_args& obj);
};


class SmartSync_writeFile_pargs {
 public:

  static const char* ascii_fingerprint; // = "1E5C9A9DC4A4ABC516EC4A8E390C91EE";
  static const uint8_t binary_fingerprint[16]; // = {0x1E,0x5C,0x9A,0x9D,0xC4,0xA4,0xAB,0xC5,0x16,0xEC,0x4A,0x8E,0x39,0x0C,0x91,0xEE};


  virtual ~SmartSync_writeFile_pargs() throw();
  const RFile* rfile;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const SmartSync_writeFile_pargs& obj);
};

typedef struct _SmartSync_writeFile_result__isset {
  _SmartSync_writeFile_result__isset() : success(false), systemException(false) {}
  bool success :1;
  bool systemException :1;
} _SmartSync_writeFile_result__isset;

class SmartSync_writeFile_result {
 public:

  static const char* ascii_fingerprint; // = "3FF585046B57CAB37B1AE9B1FE6EDD6F";
  static const uint8_t binary_fingerprint[16]; // = {0x3F,0xF5,0x85,0x04,0x6B,0x57,0xCA,0xB3,0x7B,0x1A,0xE9,0xB1,0xFE,0x6E,0xDD,0x6F};

  SmartSync_writeFile_result(const SmartSync_writeFile_result&);
  SmartSync_writeFile_result& operator=(const SmartSync_writeFile_result&);
  SmartSync_writeFile_result() {
  }

  virtual ~SmartSync_writeFile_result() throw();
  StatusReport success;
  SystemException systemException;

  _SmartSync_writeFile_result__isset __isset;

  void __set_success(const StatusReport& val);

  void __set_systemException(const SystemException& val);

  bool operator == (const SmartSync_writeFile_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(systemException == rhs.systemException))
      return false;
    return true;
  }
  bool operator != (const SmartSync_writeFile_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SmartSync_writeFile_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const SmartSync_writeFile_result& obj);
};

typedef struct _SmartSync_writeFile_presult__isset {
  _SmartSync_writeFile_presult__isset() : success(false), systemException(false) {}
  bool success :1;
  bool systemException :1;
} _SmartSync_writeFile_presult__isset;

class SmartSync_writeFile_presult {
 public:

  static const char* ascii_fingerprint; // = "3FF585046B57CAB37B1AE9B1FE6EDD6F";
  static const uint8_t binary_fingerprint[16]; // = {0x3F,0xF5,0x85,0x04,0x6B,0x57,0xCA,0xB3,0x7B,0x1A,0xE9,0xB1,0xFE,0x6E,0xDD,0x6F};


  virtual ~SmartSync_writeFile_presult() throw();
  StatusReport* success;
  SystemException systemException;

  _SmartSync_writeFile_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const SmartSync_writeFile_presult& obj);
};

typedef struct _SmartSync_checkFile_args__isset {
  _SmartSync_checkFile_args__isset() : meta(false) {}
  bool meta :1;
} _SmartSync_checkFile_args__isset;

class SmartSync_checkFile_args {
 public:

  static const char* ascii_fingerprint; // = "3734AA090439F90029F2700C2ED8340E";
  static const uint8_t binary_fingerprint[16]; // = {0x37,0x34,0xAA,0x09,0x04,0x39,0xF9,0x00,0x29,0xF2,0x70,0x0C,0x2E,0xD8,0x34,0x0E};

  SmartSync_checkFile_args(const SmartSync_checkFile_args&);
  SmartSync_checkFile_args& operator=(const SmartSync_checkFile_args&);
  SmartSync_checkFile_args() {
  }

  virtual ~SmartSync_checkFile_args() throw();
  RFileMetadata meta;

  _SmartSync_checkFile_args__isset __isset;

  void __set_meta(const RFileMetadata& val);

  bool operator == (const SmartSync_checkFile_args & rhs) const
  {
    if (!(meta == rhs.meta))
      return false;
    return true;
  }
  bool operator != (const SmartSync_checkFile_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SmartSync_checkFile_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const SmartSync_checkFile_args& obj);
};


class SmartSync_checkFile_pargs {
 public:

  static const char* ascii_fingerprint; // = "3734AA090439F90029F2700C2ED8340E";
  static const uint8_t binary_fingerprint[16]; // = {0x37,0x34,0xAA,0x09,0x04,0x39,0xF9,0x00,0x29,0xF2,0x70,0x0C,0x2E,0xD8,0x34,0x0E};


  virtual ~SmartSync_checkFile_pargs() throw();
  const RFileMetadata* meta;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const SmartSync_checkFile_pargs& obj);
};

typedef struct _SmartSync_checkFile_result__isset {
  _SmartSync_checkFile_result__isset() : success(false), systemException(false) {}
  bool success :1;
  bool systemException :1;
} _SmartSync_checkFile_result__isset;

class SmartSync_checkFile_result {
 public:

  static const char* ascii_fingerprint; // = "0305D956EEBAE6003A8617160B071B9F";
  static const uint8_t binary_fingerprint[16]; // = {0x03,0x05,0xD9,0x56,0xEE,0xBA,0xE6,0x00,0x3A,0x86,0x17,0x16,0x0B,0x07,0x1B,0x9F};

  SmartSync_checkFile_result(const SmartSync_checkFile_result&);
  SmartSync_checkFile_result& operator=(const SmartSync_checkFile_result&);
  SmartSync_checkFile_result() {
  }

  virtual ~SmartSync_checkFile_result() throw();
  RFileMetadata success;
  SystemException systemException;

  _SmartSync_checkFile_result__isset __isset;

  void __set_success(const RFileMetadata& val);

  void __set_systemException(const SystemException& val);

  bool operator == (const SmartSync_checkFile_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(systemException == rhs.systemException))
      return false;
    return true;
  }
  bool operator != (const SmartSync_checkFile_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SmartSync_checkFile_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const SmartSync_checkFile_result& obj);
};

typedef struct _SmartSync_checkFile_presult__isset {
  _SmartSync_checkFile_presult__isset() : success(false), systemException(false) {}
  bool success :1;
  bool systemException :1;
} _SmartSync_checkFile_presult__isset;

class SmartSync_checkFile_presult {
 public:

  static const char* ascii_fingerprint; // = "0305D956EEBAE6003A8617160B071B9F";
  static const uint8_t binary_fingerprint[16]; // = {0x03,0x05,0xD9,0x56,0xEE,0xBA,0xE6,0x00,0x3A,0x86,0x17,0x16,0x0B,0x07,0x1B,0x9F};


  virtual ~SmartSync_checkFile_presult() throw();
  RFileMetadata* success;
  SystemException systemException;

  _SmartSync_checkFile_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const SmartSync_checkFile_presult& obj);
};

class SmartSyncClient : virtual public SmartSyncIf {
 public:
  SmartSyncClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
    setProtocol(prot);
  }
  SmartSyncClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  void writeFile(StatusReport& _return, const RFile& rfile);
  void send_writeFile(const RFile& rfile);
  void recv_writeFile(StatusReport& _return);
  void checkFile(RFileMetadata& _return, const RFileMetadata& meta);
  void send_checkFile(const RFileMetadata& meta);
  void recv_checkFile(RFileMetadata& _return);
 protected:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
};

class SmartSyncProcessor : public ::apache::thrift::TDispatchProcessor {
 protected:
  boost::shared_ptr<SmartSyncIf> iface_;
  virtual bool dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext);
 private:
  typedef  void (SmartSyncProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);
  typedef std::map<std::string, ProcessFunction> ProcessMap;
  ProcessMap processMap_;
  void process_writeFile(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_checkFile(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
 public:
  SmartSyncProcessor(boost::shared_ptr<SmartSyncIf> iface) :
    iface_(iface) {
    processMap_["writeFile"] = &SmartSyncProcessor::process_writeFile;
    processMap_["checkFile"] = &SmartSyncProcessor::process_checkFile;
  }

  virtual ~SmartSyncProcessor() {}
};

class SmartSyncProcessorFactory : public ::apache::thrift::TProcessorFactory {
 public:
  SmartSyncProcessorFactory(const ::boost::shared_ptr< SmartSyncIfFactory >& handlerFactory) :
      handlerFactory_(handlerFactory) {}

  ::boost::shared_ptr< ::apache::thrift::TProcessor > getProcessor(const ::apache::thrift::TConnectionInfo& connInfo);

 protected:
  ::boost::shared_ptr< SmartSyncIfFactory > handlerFactory_;
};

class SmartSyncMultiface : virtual public SmartSyncIf {
 public:
  SmartSyncMultiface(std::vector<boost::shared_ptr<SmartSyncIf> >& ifaces) : ifaces_(ifaces) {
  }
  virtual ~SmartSyncMultiface() {}
 protected:
  std::vector<boost::shared_ptr<SmartSyncIf> > ifaces_;
  SmartSyncMultiface() {}
  void add(boost::shared_ptr<SmartSyncIf> iface) {
    ifaces_.push_back(iface);
  }
 public:
  void writeFile(StatusReport& _return, const RFile& rfile) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->writeFile(_return, rfile);
    }
    ifaces_[i]->writeFile(_return, rfile);
    return;
  }

  void checkFile(RFileMetadata& _return, const RFileMetadata& meta) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->checkFile(_return, meta);
    }
    ifaces_[i]->checkFile(_return, meta);
    return;
  }

};



#endif
